#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Sep 13 13:43:28 2019

@author: gustavo
"""

import pygame
import numpy as np

'''Setup variables'''
size = (800,710) #Window size

'''Arrays to contain the squares'''
squares = []

#RGB for colors
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
GREEN = (46, 145, 22)
RED = (255, 0, 0)
BLUE = (0, 0, 255)

'''Initialize pygame'''
pygame.init()

'''Activate the window display'''
screen = pygame.display.set_mode(size)
pygame.display.set_caption("Dijkstra's algorithm")

done = False #Control boolean variables

'''Activate clock'''
#Manages the speed of updates in the window
clock = pygame.time.Clock()

'''Grid setup'''
width=8
height=8
margin=1

x = width
y = height

screen.fill(WHITE) #Window background color

for column in range(0, 800, width):
        for row in range(0, 710, height):
            pygame.draw.rect(screen, BLACK, [column,row,width,height], 1)
            squares.append(pygame.Rect(column,row,width,height))

'''Get initial square'''
xi = int(input("La coordenada x del punto inicial: "))
yi = int(input("La coordenada y del punto inicial: "))

pygame.draw.rect(screen, RED, [x*(xi - 1), y*(yi - 1), width - 1, height - 1] )

'''Get final square'''
xf = int(input("La coordenada x del punto final: "))
yf = int(input("La coordenada y del punto final: "))
pygame.draw.rect(screen, GREEN, [x*(xf - 1), y*(yf - 1), width - 1, height - 1])

obs = int(input("Selecciona el numero de obstaculos: "))
obstacles = []
for i in range(obs) :
        obstacles.append([])
    
for i in range(obs) :
    while True:
        xo_i = int(input("La coordenada x del primer punto del obstaculo {}:".format(i+1)))
        if (xo_i != xi and xo_i != xf) :
            break
    while True:
        yo_i = int(input("La coordenada y del primer punto del obstaculo {}:".format(i+1)))
        if(yo_i != yi and yo_i != yf) :
            break
    
    while True:
        xf_i = int(input("La coordenada x del ultimo punto del obstaculo {}:".format(i+1)))
        if(xf_i != xi and xf_i != xf) :
            break
    
    while True:
        yf_i = int(input("La coordenada y del ultimo punto del obstaculo {}:".format(i+1)))
        if(yf_i != yi and yf_i != yf):
            break
    
    for i in range(xo_i, xf_i, 1) :
        for j in range(yo_i, yf_i, 1) :
            pygame.draw.rect(screen, BLACK, [x*(i - 1),y*(j - 1),width - 1,height - 1])
 
        
        
'''Game loop'''
#Al the Dijkstra graphical simulation goes inside this while loop
while not done:
    
    #This section allows the window to be closed
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            done = True        
    
    pygame.display.flip() #Actualize a change in the window (important)
    
    clock.tick(60) #60 fps only

#Close the window
pygame.quit()